// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Redacao.Data.Context;

namespace Redacao.Data.Migrations
{
    [DbContext(typeof(RedacaoSQLContext))]
    partial class RedacaoSQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Redacao.Domain.Entidades.Documento.DocumentoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<Guid>("AmazonS3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("OrganizacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("RedacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("TemaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCriadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizacaoId");

                    b.HasIndex("RedacaoId");

                    b.HasIndex("TemaId");

                    b.HasIndex("UsuarioCriadorId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Organizacao.OrganizacaoOrganizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CodigoExterno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorPrimaria")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CorSecundaria")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoOrganizacao")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCriadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCriadorId");

                    b.ToTable("Organizacoes");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Redacao.RedacaoRedacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("AvaliacaoProfessorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizacaoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusRedacao")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<int>("TemaRedacaoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoRedacao")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<int>("UsuarioAlunoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCriadorId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizacaoId");

                    b.HasIndex("TemaRedacaoId");

                    b.HasIndex("UsuarioCriadorId");

                    b.HasIndex("UsuarioProfessorId");

                    b.ToTable("Redacoes");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Redacao.TemaRedacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrganizacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCriadorId")
                        .HasColumnType("int");

                    b.Property<int>("VestibularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizacaoId");

                    b.HasIndex("UsuarioCriadorId");

                    b.HasIndex("VestibularId");

                    b.ToTable("TemasRedacao");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioOrganizacao", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizacaoId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "OrganizacaoId");

                    b.HasIndex("OrganizacaoId");

                    b.ToTable("UsuarioOrganizacoes");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RG")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Vestibular.VestibularVestibular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrganizacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCriadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizacaoId");

                    b.HasIndex("UsuarioCriadorId");

                    b.ToTable("Vestibulares");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Documento.DocumentoDocumento", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Organizacao.OrganizacaoOrganizacao", "Organizacao")
                        .WithMany("Documentos")
                        .HasForeignKey("OrganizacaoId")
                        .HasConstraintName("FK__Documento__Organizacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Redacao.RedacaoRedacao", "Redacao")
                        .WithMany("DocumentosRedacao")
                        .HasForeignKey("RedacaoId")
                        .HasConstraintName("FK__Documento__Redacao");

                    b.HasOne("Redacao.Domain.Entidades.Redacao.TemaRedacao", "Tema")
                        .WithMany("DocumentosTema")
                        .HasForeignKey("TemaId")
                        .HasConstraintName("FK__Documento__Tema");

                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", "UsuarioCriador")
                        .WithMany()
                        .HasForeignKey("UsuarioCriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacao");

                    b.Navigation("Redacao");

                    b.Navigation("Tema");

                    b.Navigation("UsuarioCriador");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Organizacao.OrganizacaoOrganizacao", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", "UsuarioCriador")
                        .WithMany()
                        .HasForeignKey("UsuarioCriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioCriador");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Redacao.RedacaoRedacao", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Organizacao.OrganizacaoOrganizacao", "Organizacao")
                        .WithMany("Redacoes")
                        .HasForeignKey("OrganizacaoId")
                        .HasConstraintName("FK__Redacao__Organizacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Redacao.TemaRedacao", "TemaRedacao")
                        .WithMany("Redacoes")
                        .HasForeignKey("TemaRedacaoId")
                        .HasConstraintName("FK__Redacao__TemaRedacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", "UsuarioCriador")
                        .WithMany()
                        .HasForeignKey("UsuarioCriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", "Usuario")
                        .WithMany("Redacoes")
                        .HasForeignKey("UsuarioProfessorId")
                        .HasConstraintName("FK__Redacao__UsuarioProfessor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacao");

                    b.Navigation("TemaRedacao");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioCriador");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Redacao.TemaRedacao", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Organizacao.OrganizacaoOrganizacao", "Organizacao")
                        .WithMany("TemasRedacao")
                        .HasForeignKey("OrganizacaoId")
                        .HasConstraintName("FK__TemaRedacao__Organizacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", "UsuarioCriador")
                        .WithMany()
                        .HasForeignKey("UsuarioCriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Vestibular.VestibularVestibular", "Vestibular")
                        .WithMany("TemasRedacao")
                        .HasForeignKey("VestibularId")
                        .HasConstraintName("FK__TemaRedacao__Vestibular")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacao");

                    b.Navigation("UsuarioCriador");

                    b.Navigation("Vestibular");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.RoleClaim", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Usuario.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioClaim", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioLogin", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioOrganizacao", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Organizacao.OrganizacaoOrganizacao", "Organizacao")
                        .WithMany("Usuarios")
                        .HasForeignKey("OrganizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", "Usuario")
                        .WithMany("Organizacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioRole", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Usuario.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioToken", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Vestibular.VestibularVestibular", b =>
                {
                    b.HasOne("Redacao.Domain.Entidades.Organizacao.OrganizacaoOrganizacao", "Organizacao")
                        .WithMany("Vestibulares")
                        .HasForeignKey("OrganizacaoId")
                        .HasConstraintName("FK__Vestibular__Organizacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", "UsuarioCriador")
                        .WithMany()
                        .HasForeignKey("UsuarioCriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacao");

                    b.Navigation("UsuarioCriador");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Organizacao.OrganizacaoOrganizacao", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Redacoes");

                    b.Navigation("TemasRedacao");

                    b.Navigation("Usuarios");

                    b.Navigation("Vestibulares");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Redacao.RedacaoRedacao", b =>
                {
                    b.Navigation("DocumentosRedacao");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Redacao.TemaRedacao", b =>
                {
                    b.Navigation("DocumentosTema");

                    b.Navigation("Redacoes");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Usuario.UsuarioUsuario", b =>
                {
                    b.Navigation("Organizacoes");

                    b.Navigation("Redacoes");
                });

            modelBuilder.Entity("Redacao.Domain.Entidades.Vestibular.VestibularVestibular", b =>
                {
                    b.Navigation("TemasRedacao");
                });
#pragma warning restore 612, 618
        }
    }
}
